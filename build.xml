<project name="solgeneossample" default="dist" basedir="." >


    <!-- Read property files -->
	<target name="readProperties">
		<property file="${basedir}/build.properties"/>
	</target>

	<!-- Setup Staging directory -->
	<target name="setupStaging" depends="readProperties">
		<mkdir dir="${basedir}/${dist.dir.name}/config"/>
		<mkdir dir="${basedir}/${dist.dir.name}/lib"/>

		<copy todir="${basedir}/${dist.dir.name}/config">
		    <fileset dir="${basedir}/config"/>
        </copy>
		<!-- Only include libraries required by the monitors in the bundledLib directory -->
		<copy todir="${basedir}/${dist.dir.name}/lib">
		    <fileset dir="${basedir}/lib/bundledLib">
		    	<include name="*.jar"/>
		    </fileset>
        </copy>
	</target>


	<!-- initializes -->
	<target name="init" depends="readProperties">

		<!-- Setup staging -->
		<antcall target="setupStaging"/>

    	<mkdir dir="${basedir}/${output.dir.name}"/>

		<!-- The classpath -->
	    <path id="project.classpath">
	        <fileset dir="${basedir}/${compilelib.dir}">
	             <include name="*.jar"/>
	        </fileset>
	        <fileset dir="${basedir}/${bundledlib.dir}">
	             <include name="*.jar"/>
	        </fileset>
	    </path>
    </target>

	<!-- compiles -->
    <target name="compile" depends="init">
    	<echo> Compiling...  </echo>
		
		<!-- Copy source to temp -->
    	<copy todir="${basedir}/${tempsrc.dir.name}">
    		<fileset dir="src">
				<patternset>
					<exclude name="**/${filenamepattern.messagingtester}*"/>
					<exclude name="**/${filenamepattern.messagingtest.monitor}*"/>
				</patternset>
			</fileset>
    	</copy>
		
        <javac  includeantruntime="false"
				source="${compile.source}"
        		target="${compile.target}"
			    debug="${compile.debug}"
        	    optimize="${compile.optimize}"
        	    srcdir="${basedir}/${tempsrc.dir.name}" destdir="${basedir}/${output.dir.name}"
        	    includes="" excludes="">
            <classpath refid="project.classpath"/>
        </javac>
    </target>

	<!-- compiles advanced monitors -->
    <target name="compile-advanced" depends="init">
    	<echo> Compiling Advanced...  </echo>
		
		<!-- Copy source to temp -->
    	<copy todir="${basedir}/${tempsrc.dir.name}">
    		<fileset dir="src">
				<patternset>
					<include name="**/${filenamepattern.messagingtester}*"/>
					<include name="**/${filenamepattern.messagingtest.monitor}*"/>
				</patternset>
			</fileset>
    	</copy>
		
        <javac  includeantruntime="false"
				source="${compile.source}"
        		target="${compile.target}"
			    debug="${compile.debug}"
        	    optimize="${compile.optimize}"
        	    srcdir="${basedir}/${tempsrc.dir.name}" destdir="${basedir}/${output.dir.name}"
        	    includes="" excludes="">
            <classpath refid="project.classpath"/>
        </javac>
    </target>
	
	<!-- cleans -->
	<target name="clean" depends="readProperties" description="Clean output">
		<delete dir="${basedir}/${dist.dir.name}"/>
		<delete dir="${basedir}/${output.dir.name}"/>
		<delete dir="${basedir}/${tempsrc.dir.name}"/>
		<delete file="${scp.tracking.cachefile}"/>
	</target>

	<!-- build -->
	<target name="build" depends="compile" description="Build monitor jars">
		<echo>create ${jarname.util}.jar in ${dist.dir.name}</echo>
		<jar destfile="${basedir}/${dist.dir.name}/lib/${jarname.util}.jar">
			<fileset dir="${basedir}/${output.dir.name}">
				<include name="**/util/*.class"/>
			</fileset>
		</jar>	
		<!-- Users Monitor Jar: -->
		<echo>create ${jarname.users.monitor}.jar in ${dist.dir.name}</echo>
		<jar destfile="${basedir}/${dist.dir.name}/lib/${jarname.users.monitor}.jar">
			<fileset dir="${basedir}/${output.dir.name}">
				<include name="**/${filenamepattern.users.monitor}*.class"/>
			</fileset>
		</jar>		
		<!-- QueuesEx Monitor Jar: -->
		<echo>create ${jarname.queues.monitor}.jar in ${dist.dir.name}</echo>
		<jar destfile="${basedir}/${dist.dir.name}/lib/${jarname.queues.monitor}.jar">
			<fileset dir="${basedir}/${output.dir.name}">
				<include name="**/${filenamepattern.queues.monitor}*.class"/>
			</fileset>
		</jar>	
		<!-- TopicEndpointsEx Monitor Jar: -->
		<echo>create ${jarname.topicendpoints.monitor}.jar in ${dist.dir.name}</echo>
		<jar destfile="${basedir}/${dist.dir.name}/lib/${jarname.topicendpoints.monitor}.jar">
			<fileset dir="${basedir}/${output.dir.name}">
				<include name="**/${filenamepattern.topicendpoints.monitor}*.class"/>
			</fileset>
		</jar>			
		
		<!-- MessageVPNBridgeRates Monitor Jar: -->
		<echo>create ${jarname.vpnbridgerates.monitor}.jar in ${dist.dir.name}</echo>
		<jar destfile="${basedir}/${dist.dir.name}/lib/${jarname.vpnbridgerates.monitor}.jar">
			<fileset dir="${basedir}/${output.dir.name}">
				<include name="**/${filenamepattern.vpnbridgerates.monitor}*.class"/>
			</fileset>
		</jar>
		
		<!-- MessageVPNLimits Monitor Jar: -->
		<echo>create ${jarname.vpnlimits.monitor}.jar in ${dist.dir.name}</echo>
		<jar destfile="${basedir}/${dist.dir.name}/lib/${jarname.vpnlimits.monitor}.jar">
			<fileset dir="${basedir}/${output.dir.name}">
				<include name="**/${filenamepattern.vpnlimits.monitor}*.class"/>
			</fileset>
		</jar>
		<!-- ClientProfileLimits Monitor Jar: -->
		<echo>create ${jarname.cplimits.monitor}.jar in ${dist.dir.name}</echo>
		<jar destfile="${basedir}/${dist.dir.name}/lib/${jarname.cplimits.monitor}.jar">
			<fileset dir="${basedir}/${output.dir.name}">
				<include name="**/${filenamepattern.cplimits.monitor}*.class"/>
			</fileset>
		</jar>		
		<!-- MessageRates Monitor Jar: -->
		<echo>create ${jarname.messagerates.monitor}.jar in ${dist.dir.name}</echo>
		<jar destfile="${basedir}/${dist.dir.name}/lib/${jarname.messagerates.monitor}.jar">
			<fileset dir="${basedir}/${output.dir.name}">
				<include name="**/${filenamepattern.messagerates.monitor}*.class"/>
			</fileset>
		</jar>
		<!-- ClientsTopPublishers Monitor Jar: -->
		<echo>create ${jarname.toppublishers.monitor}.jar in ${dist.dir.name}</echo>
		<jar destfile="${basedir}/${dist.dir.name}/lib/${jarname.toppublishers.monitor}.jar">
			<fileset dir="${basedir}/${output.dir.name}">
				<include name="**/${filenamepattern.toppublishers.monitor}*.class"/>
			</fileset>
		</jar>
		<!-- ClientsTopSubscribers Monitor Jar: -->
		<echo>create ${jarname.topsubscribers.monitor}.jar in ${dist.dir.name}</echo>
		<jar destfile="${basedir}/${dist.dir.name}/lib/${jarname.topsubscribers.monitor}.jar">
			<fileset dir="${basedir}/${output.dir.name}">
				<include name="**/${filenamepattern.topsubscribers.monitor}*.class"/>
			</fileset>
		</jar>		
		<!-- ClientsSlowSubscribers Monitor Jar: -->
		<echo>create ${jarname.slowsubscribers.monitor}.jar in ${dist.dir.name}</echo>
		<jar destfile="${basedir}/${dist.dir.name}/lib/${jarname.slowsubscribers.monitor}.jar">
			<fileset dir="${basedir}/${output.dir.name}">
				<include name="**/${filenamepattern.slowsubscribers.monitor}*.class"/>
			</fileset>
		</jar>				
		<!-- SoftwareSystemHealth Monitor Jar: -->
		<echo>create ${jarname.softwaresystemhealth.monitor}.jar in ${dist.dir.name}</echo>
		<jar destfile="${basedir}/${dist.dir.name}/lib/${jarname.softwaresystemhealth.monitor}.jar">
			<fileset dir="${basedir}/${output.dir.name}">
				<include name="**/${filenamepattern.softwaresystemhealth.monitor}*.class"/>
			</fileset>
		</jar>			
		<chmod perm="755">
			<fileset dir="${basedir}/${dist.dir.name}/config"/>
			<fileset dir="${basedir}/${dist.dir.name}/lib"/>
		</chmod>
		<!-- ConfigSyncStatus Monitor Jar: -->
		<echo>create ${jarname.configsyncstatus.monitor}.jar in ${dist.dir.name}</echo>
		<jar destfile="${basedir}/${dist.dir.name}/lib/${jarname.configsyncstatus.monitor}.jar">
			<fileset dir="${basedir}/${output.dir.name}">
				<include name="**/${filenamepattern.configsyncstatus.monitor}*.class"/>
			</fileset>
		</jar>			
		<chmod perm="755">
			<fileset dir="${basedir}/${dist.dir.name}/config"/>
			<fileset dir="${basedir}/${dist.dir.name}/lib"/>
		</chmod>
	</target>
	
	<!-- build advanced -->
		<target name="build-advanced" depends="compile-advanced" description="Build advanced monitor jars">
			<echo>create ${jarname.messagingtester}.jar in ${dist.dir.name}</echo>
			<jar destfile="${basedir}/${dist.dir.name}/lib/${jarname.messagingtester}.jar">
				<fileset dir="${basedir}/${output.dir.name}">
					<include name="**/messaging/*.class"/>
				</fileset>
			</jar>	
			<!-- MessagingTest Monitor Jar: -->
			<echo>create ${jarname.messagingtest.monitor}.jar in ${dist.dir.name}</echo>
			<jar destfile="${basedir}/${dist.dir.name}/lib/${jarname.messagingtest.monitor}.jar">
				<fileset dir="${basedir}/${output.dir.name}">
					<include name="**/${filenamepattern.messagingtest.monitor}*.class"/>
				</fileset>
			</jar>	
			<chmod perm="755">
				<fileset dir="${basedir}/${dist.dir.name}/config"/>
				<fileset dir="${basedir}/${dist.dir.name}/lib"/>
			</chmod>
		</target>
	

	<!-- clean build for distribution -->
	<target name="dist" depends="clean, build" description="Clean output and then build monitor jars">
	</target>

	<!-- clean build for advanced distribution -->
	<target name="dist-advanced" depends="clean, build, build-advanced" description="Clean output and then build monitor jars, including advanced ones">
	</target>
		
	<!-- copy the changed libs and configs to dev appliance -->
	<!-- task depends on jsch-0.1.55.jar being available in ant/lib -->
	<target name="deploy" depends="readProperties" description="Copy monitor jars to dev appliance">
	
		<input message="Please enter the password for ${dev.appliance.user} user:" addproperty="scp.pass">
			<handler classname="org.apache.tools.ant.input.SecureInputHandler" />
		</input>
		
		<echo>Copying modified jar files from ${basedir}/${dist.dir.name}/lib to dev appliance</echo>
		<scp todir="${dev.appliance.user}@${dev.appliance.hostname}:${deploy.monitor.jars.dir}" trust="true" sftp="true" password="${scp.pass}">
			<fileset dir="${basedir}/${dist.dir.name}/lib">
				<include name="*.jar"/>
				<modified>
					<param name="cache.cachefile" value="${scp.tracking.cachefile}"/>
				</modified>
			</fileset>
		</scp>
		
		<echo>Copying modified config files from ${basedir}/${dist.dir.name}/config to dev appliance</echo>
		<scp todir="${dev.appliance.user}@${dev.appliance.hostname}:${deploy.monitor.configs.dir}" trust="true" sftp="true" password="${scp.pass}">
			<fileset dir="${basedir}/${dist.dir.name}/config">
				<include name="*.properties"/>
				<modified>
					<param name="cache.cachefile" value="${scp.tracking.cachefile}"/>
				</modified>
			</fileset>
		</scp>
	</target>
	
	<target name="deploy-advanced" depends="readProperties" description="Copy advanced monitor jars to dev appliance">
	
		<input message="Please enter the password for ${dev.appliance.user} user:" addproperty="scp.pass">
			<handler classname="org.apache.tools.ant.input.SecureInputHandler" />
		</input>
		
		<echo>Copying modified jar files from ${basedir}/${dist.dir.name}/lib to dev appliance</echo>
		<scp todir="${dev.appliance.user}@${dev.appliance.hostname}:${deploy.monitor.jars.dir}" trust="true" sftp="true" password="${scp.pass}">
			<fileset dir="${basedir}/${dist.dir.name}/lib">
				<include name="*.jar"/>
				<modified>
					<param name="cache.cachefile" value="${scp.tracking.cachefile}"/>
				</modified>
			</fileset>
		</scp>
		
		<echo>Copying modified config files from ${basedir}/${dist.dir.name}/config/advanced to dev appliance</echo>
		<scp todir="${dev.appliance.user}@${dev.appliance.hostname}:${deploy.monitor.configs.dir}" trust="true" sftp="true" password="${scp.pass}">
			<fileset dir="${basedir}/${dist.dir.name}/config/advanced">
				<include name="*.properties"/>
				<modified>
					<param name="cache.cachefile" value="${scp.tracking.cachefile}"/>
				</modified>
			</fileset>
		</scp>
	</target>

</project>
